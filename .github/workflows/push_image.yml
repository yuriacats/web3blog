name: Push Image CI

on:
  push:
    branches: ["master"]

jobs:
  pack_backend:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      # AWS 認証
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr
      - uses: actions/checkout@v3
      - name: build and push docker image to ecr
        id: build-image
        env:
          REPOSITORY: ${{ secrets.BACKEND_REPO }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build  --tag ${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }} backend
          docker push ${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          echo "image=${{env.REPOSITORY}}:${{env.IMAGE_TAG}}" >> $GITHUB_OUTPUT
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: .aws/backend.json
          container-name: backend
          image: ${{ steps.build-image.outputs.image }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.BACKEND_SERVICE }}
          cluster: ${{ secrets.CLUSTER }}
          wait-for-service-stability: true
  pack_frontend:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      # AWS 認証
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - uses: actions/checkout@v3
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr
      - name: build and push docker image to ecr
        id: build-image
        env:
          REPOSITORY: ${{ secrets.FRONTEND_REPO }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build --build-context backend=./backend --tag ${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }} front
          docker push ${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          echo "image=${{env.REPOSITORY}}:${{env.IMAGE_TAG}}" >> $GITHUB_OUTPUT
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: .aws/frontends.json
          container-name: web3fontends
          image: ${{ steps.build-image.outputs.image }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.FRONT_SERVICE }}
          cluster: ${{ secrets.CLUSTER }}
          wait-for-service-stability: true
